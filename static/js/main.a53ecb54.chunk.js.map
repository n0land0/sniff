{"version":3,"sources":["fetchCalls.js","Header/Nav/Nav.js","Header/Header.js","Gallery/Card/Card.js","Gallery/Gallery.js","Profile/PlaydateFormAndMap/Map/Search.js","Profile/PlaydateFormAndMap/PlaydateContextProvider.js","assets/target.png","Profile/PlaydateFormAndMap/Map/Locate.js","assets/dog-park.svg","Profile/PlaydateFormAndMap/Map/ParkMarkers.js","Profile/PlaydateFormAndMap/Map/mapConfig.js","Profile/PlaydateFormAndMap/Map/mapStyles.js","Profile/PlaydateFormAndMap/Map/Map.js","Profile/PlaydateFormAndMap/PlaydateForm/PlaydateForm.js","Profile/PlaydateFormAndMap/PlaydateFormAndMap.js","Profile/Profile.js","Dashboard/Playdate/Playdate.js","Dashboard/Dashboard.js","App/App.js","index.js"],"names":["fetchCalls","getUsers","fetch","then","response","checkResponse","json","catch","error","console","message","getSingleUser","userId","getAppointments","getParks","postAppointment","newPlaydate","method","headers","body","JSON","stringify","deleteAppointment","appointmentId","ok","status","Error","Nav","className","exact","to","activeClassName","Header","profilePic","src","alt","Card","id","owner_name","dog_name","profile_pic","dog_breed","Gallery","userCards","users","map","user","Search","panTo","usePlacesAutocomplete","requestOptions","location","lat","lng","radius","ready","value","suggestions","data","setValue","clearSuggestions","onSelect","address","getGeocode","results","getLatLng","log","onChange","event","target","disabled","placeholder","place_id","description","PlaydateContext","createContext","PlaydateContextProvider","children","useState","dayjs","format","date","setDate","selected","setSelected","setLocation","parks","setParks","useEffect","Provider","Locate","center","useContext","onClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","ParkMarkers","parkCoords","parkObj","dogParkMarkers","icon","url","dogPark","scaledSize","window","google","maps","Size","origin","Point","anchor","name","containerDimensions","width","height","borderRadius","options","styles","disableDefaultUI","zoomControl","libraries","Map","mapRef","useRef","onMapLoad","useCallback","current","zoom","setZoom","googleMapsApiKey","mapContainerStyle","onLoad","onCloseClick","PlaydateForm","currentUserId","selectedUserId","updateProfile","updateCurrentUser","handleChange","findPark","selectedPark","find","clearInputs","parkOptions","park","onSubmit","preventDefault","playdate","ownerIds","type","required","hidden","PlaydateFormAndMap","Profile","state","selectedUser","bio","appointments","existingAppointment","componentDidMount","props","setState","componentDidUpdate","findExistingAppointment","appts","upcomingPlaydate","sort","appt1","appt2","Date","appt","ownersId","this","Component","Playdate","ownerName","dogName","style","backgroundImage","Dashboard","playdates","apptA","apptB","document","querySelector","scrollLeft","App","currentUser","a","allUsers","filteredUsers","filter","path","render","match","params","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a53ecb54.chunk.js","sourcesContent":["const fetchCalls = {\n  getUsers() {\n    return fetch('https://sniff-api.herokuapp.com/api/v1/users')\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n      .catch(error => {\n        console.error(error)\n        return error.message\n      })\n  },\n\n  getSingleUser(userId) {\n    return fetch(`https://sniff-api.herokuapp.com/api/v1/users/${userId}`)\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n      .catch(error => {\n        console.error(error)\n        return error.message\n      })\n  },\n\n  getAppointments(userId) {\n    return fetch(`https://sniff-api.herokuapp.com/api/v1/appointments/${userId}`)\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n      .catch(error => {\n        console.error(error)\n        return error.message\n      })\n  },\n\n  getParks() {\n    return fetch('https://sniff-api.herokuapp.com/api/v1/parks')\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n      .catch(error => {\n        console.error(error)\n        return error.message\n      })\n  },\n\n  postAppointment(newPlaydate) {\n    return fetch('https://sniff-api.herokuapp.com/api/v1/appointments', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPlaydate)\n    })\n    .then(response => {\n      this.checkResponse(response)\n      return response.json()\n    })\n    .catch(error => {\n      console.error(error)\n      return error.message\n    })\n  },\n\n  deleteAppointment(appointmentId) {\n    return fetch(`https://sniff-api.herokuapp.com/api/v1/appointments/${appointmentId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => {\n      this.checkResponse(response)\n      return response.json()\n    })\n    .catch(error => {\n      console.error(error)\n      return error.message\n    })\n  },\n\n  checkResponse(response) {\n    if (!response.ok) {\n      if (response.status === 422 || response.status === 403) {\n        throw new Error('Sorry, we can\\'t find an account with these credentials. Please try again.')\n      } else if (response.status === 404) {\n        throw new Error('The page you are looking for doesn\\'t exist')\n      } else if (response.status >= 500) {\n        throw new Error('We\\'re having issues on our end. Please try again later.')\n      } else {\n        throw new Error('Please check your network connection')\n      }\n    }\n  }\n}\n\nexport default fetchCalls\n","import React from 'react'\nimport {  NavLink } from 'react-router-dom'\n// import './_Nav.scss'\n\nconst Nav = () => {\n\n  return (\n    <nav className='navbar'>\n      <NavLink\n        exact to='/'\n        className='navbar__tab'\n        activeClassName='active'\n      >\n        home\n      </NavLink>\n      <NavLink\n        exact to='/findfriends'\n        className='navbar__tab'\n        activeClassName='active'\n      >\n        find friends\n      </NavLink>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n// import './_Header.scss'\nimport Nav from './Nav/Nav'\n\nconst Header = ({ profilePic }) => {\n\n  return (\n    <header className='header'>\n      <article className='header__user-photo-username'>\n        <img src={profilePic} className='header__user-photo' alt='user photo' />\n        <h3 className='header__username'>Bruce</h3>\n      </article>\n      <article className='header__logo-tagline'>\n        <div className='header__logo'>\n          <h1 className='title'>snïff.</h1>\n        </div>\n        <h3 className='header__tagline'>(wag. fetch. play.)</h3>\n      </article>\n      <Nav />\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// import './_Card.scss'\n\nconst Card = ({ id, owner_name, dog_name, profile_pic, dog_breed }) => {\n\n  return (\n    <Link to={`/profile/${id}`}>\n      <article className='profile-card'>\n        <img className=\"profile-card__image\" src={profile_pic} alt='profile picture'/>\n        <h3 className=\"profile-card__card-details\">{dog_name} the {dog_breed} & {owner_name}</h3>\n      </article>\n    </Link>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport Card from './Card/Card'\n// import './_Gallery.scss'\n\nconst Gallery = ({ users }) => {\n  const userCards = users.map(user => <Card key={user.id} {...user} />)\n\n  return (\n    <section className='gallery'>\n      {userCards}\n    </section>\n  )\n}\n\nexport default Gallery\n","import React from 'react'\nimport usePlacesAutocomplete, { getGeocode, getLatLng } from 'use-places-autocomplete'\nimport { Combobox, ComboboxInput, ComboboxPopover, ComboboxList, ComboboxOption } from '@reach/combobox'\nimport '@reach/combobox/styles.css'\n\nconst Search = ({ panTo }) => {\n  const { ready, value, suggestions: { status, data }, setValue, clearSuggestions, } =\n    usePlacesAutocomplete({\n      requestOptions: {\n        location: {\n          lat: () => 39.74846723935253,\n          lng: () => -105.04736793135767\n        },\n        radius: 2000\n      }\n    })\n\n  return (\n    <Combobox\n      onSelect={(address) => {\n        setValue(address, false)\n        clearSuggestions()\n        getGeocode({ address })\n          .then(results =>\n            getLatLng(results[0])\n              .then(({ lat, lng }) =>\n                panTo({ lat, lng }, 14)\n              )\n          )\n          .catch(error => console.log(error.message))\n      }}\n    >\n      <ComboboxInput\n        className='search'\n        value={value}\n        onChange={(event) => {\n          setValue(event.target.value)\n        }}\n        disabled={!ready}\n        placeholder='enter a landmark or address'\n      />\n      <ComboboxPopover>\n        <ComboboxList>\n          {status === 'OK' && data.map(({place_id, description}) =>\n            <ComboboxOption key={place_id} value={description} />\n          )}\n        </ComboboxList>\n      </ComboboxPopover>\n    </Combobox>\n  )\n}\n\nexport default Search\n","import React, { createContext, useState, useEffect } from 'react'\nimport fetchCalls from '../../fetchCalls'\n// import parksData from '../parksData'\nimport dayjs from 'dayjs'\n\nexport const PlaydateContext = createContext()\n\nconst PlaydateContextProvider = ({ children }) => {\n  const [date, setDate] = useState(dayjs().format('YYYY-MM-DD'))\n  const [selected, setSelected] = useState(null)\n  const [location, setLocation] = useState('')\n  const [parks, setParks] = useState([])\n\n  const value = { date, setDate, selected, setSelected, location, setLocation, parks, setParks }\n\n  useEffect(() => {\n    fetchCalls.getParks()\n      .then(parks => setParks(parks))\n  }, [])\n\n  return (\n    <PlaydateContext.Provider value={value}>\n      {children}\n    </PlaydateContext.Provider>\n  )\n}\n\nexport default PlaydateContextProvider\n","export default __webpack_public_path__ + \"static/media/target.dfe8753c.png\";","import React, { useContext } from 'react'\nimport {PlaydateContext} from '../PlaydateContextProvider'\nimport target from '../../../assets/target.png'\n\nconst Locate = ({ panTo, center }) => {\n  // const { date, setDate, selected, setSelected, location, setLocation, parks, setParks } = useContext(PlaydateContext)\n    const { setSelected } = useContext(PlaydateContext)\n\n  const showMyLocation = () => {\n    navigator.geolocation.getCurrentPosition(position => {\n      panTo({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      }, 14)\n    }, () => console.log('failed to locate user'))\n    setSelected(null)\n  }\n\n  return (\n    <article className='locate-container'>\n      <button\n        className='locate__show-my-location-btn'\n        onClick={showMyLocation}\n      >\n        <img src={target} alt='show my location' />\n      </button>\n      <button\n        className='locate__reset-map-btn'\n        onClick={() => {\n          panTo({ lat: center.lat, lng: center.lng }, 12)\n          setSelected(null)\n        }}\n      >reset map</button>\n    </article>\n  )\n}\n\nexport default Locate\n","export default __webpack_public_path__ + \"static/media/dog-park.ec284a15.svg\";","import React, { useContext } from 'react'\nimport { Marker } from '@react-google-maps/api'\n// import parksData from '../parksData'\nimport dogPark from '../../../assets/dog-park.svg'\nimport {PlaydateContext} from '../PlaydateContextProvider'\n\nconst ParkMarkers = ({ panTo }) => {\n  // const { date, setDate, selected, setSelected, location, setLocation, parks, setParks } = useContext(PlaydateContext)\n  const { setSelected, setLocation, parks } = useContext(PlaydateContext)\n\n  const parkCoords = (parkObj) => {\n    return {\n      lat: parkObj.coords.lat,\n      lng: parkObj.coords.lng\n    }\n  }\n\n  const dogParkMarkers = parks.map(parkObj =>\n    <Marker\n      key={parkObj.id}\n      position={parkCoords(parkObj)}\n      icon={{\n        url: dogPark,\n        scaledSize: new window.google.maps.Size(30, 30),\n        origin: new window.google.maps.Point(0, 0),\n        anchor: new window.google.maps.Point(15, 15)\n      }}\n      onClick={() => {\n        setSelected(parkObj)\n        setLocation(parkObj.name)\n        panTo(parkCoords(parkObj), 14)\n      }}\n    />\n  )\n\n  return (\n    <>\n      {dogParkMarkers}\n    </>\n  )\n}\n\nexport default ParkMarkers\n","import mapStyles from './mapStyles'\n\nconst containerDimensions = {\n  width: '28rem',\n  height: '28rem',\n  borderRadius: '10px'\n}\n\nconst center = {\n  lat: 39.74121768558487,\n  lng: -104.9915066575683\n}\n\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n}\n\nconst libraries = ['places']\n\nexport { containerDimensions, center, options, libraries }\n","const mapStyles = [\n  {\n      \"featureType\": \"landscape.natural\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"color\": \"#e0efef\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"hue\": \"#1900ff\"\n          },\n          {\n              \"color\": \"#c0e8e8\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"lightness\": 100\n          },\n          {\n              \"visibility\": \"simplified\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"transit.line\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"lightness\": 700\n          }\n      ]\n  },\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"all\",\n      \"stylers\": [\n          {\n              \"color\": \"#7dcdcd\"\n          }\n      ]\n  }\n]\n\nexport default mapStyles\n","import React, { useCallback, useRef, useContext } from 'react'\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api'\nimport Search from './Search'\nimport Locate from './Locate'\nimport ParkMarkers from './ParkMarkers'\nimport {PlaydateContext} from '../PlaydateContextProvider'\nimport { containerDimensions, center, options, libraries } from './mapConfig'\n// import dogPark from '../assets/dog-park.svg'\n// import './_Map.scss'\n\nconst Map = () => {\n  // const { date, setDate, selected, setSelected, location, setLocation, parks, setParks } = useContext(PlaydateContext)\n  const { selected, setSelected } = useContext(PlaydateContext)\n\n  const mapRef = useRef()\n  const onMapLoad = useCallback((map) => {\n    mapRef.current = map\n  }, [])\n\n  const panTo = useCallback(({ lat, lng }, zoom) => {\n    mapRef.current.panTo({ lat, lng })\n    mapRef.current.setZoom(zoom)\n  })\n\n  return (\n    <LoadScript\n      googleMapsApiKey='AIzaSyCOwqWZQDbUMMCFOsyYUKtLmxll4AIM-6g'\n      libraries={libraries}\n    >\n      <article className='search-locate-container'>\n        <Search panTo={panTo} />\n        <Locate panTo={panTo} center={center}/>\n      </article>\n      <GoogleMap\n        mapContainerStyle={containerDimensions}\n        center={center}\n        zoom={12}\n        options={options}\n        onLoad={onMapLoad}\n      >\n        <ParkMarkers panTo={panTo}/>\n        {selected ? (\n          <InfoWindow\n            className='info-window'\n            position={{ lat: selected.coords.lat, lng: selected.coords.lng }}\n            onCloseClick={() => {\n              setSelected(null)\n            }}\n          >\n            <p className='info-window__park-name-display'>{selected.name}</p>\n          </InfoWindow>\n        ) : null}\n      </GoogleMap>\n    </LoadScript>\n  )\n}\n\nexport default Map\n// export default React.memo(Map)\n","import React, { useContext } from 'react'\nimport { PlaydateContext } from '../PlaydateContextProvider'\n// import './_PlaydateForm.scss'\n\nimport fetchCalls from '../../../fetchCalls'\n\n\nconst PlaydateForm = ({ currentUserId, selectedUserId, updateProfile, updateCurrentUser }) => {\n  // const { date, setDate, selected, setSelected, location, setLocation, parks, setParks } = useContext(PlaydateContext)\n  const { date, setDate, setSelected, location, setLocation, parks } = useContext(PlaydateContext)\n\n  const handleChange = (event) => {\n    const { name, value } = event.target\n    if (name === 'date') { setDate(value) }\n    if (name === 'location') {\n      setLocation(value)\n      findPark(event)\n    }\n  }\n\n  const findPark = (event) => {\n    const selectedPark = parks.find(parkObj => parkObj.name === event.target.value)\n    setSelected(selectedPark)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const playdate = {\n      ownerIds: [currentUserId, selectedUserId],\n      dogPark: location,\n      date: date,\n    }\n\n    fetchCalls.postAppointment(playdate)\n    .then(() => {\n      updateCurrentUser()\n      updateProfile()\n    })\n    clearInputs()\n  }\n\n  const clearInputs = () => {\n    setDate('')\n    setSelected(null)\n    setLocation('')\n  }\n\n  const parkOptions = parks.map(park => <option value={park.name} >{park.name}</option>)\n\n  return (\n    <form className='playdate-form' onSubmit={handleSubmit}>\n      <input\n        className='playdate-form__date'\n        type='date'\n        name='date'\n        value={date}\n        required\n        onChange={handleChange}\n      />\n      <select\n        className='playdate-form__dropdown'\n        name='location'\n        value={location}\n        onChange={handleChange}\n        required\n      >\n        <option value='' disabled selected hidden>choose a park</option>\n        {parkOptions}\n      </select>\n      <button className='playdate-form__set-playdate-btn'>set playdate</button>\n    </form>\n  )\n}\n\nexport default PlaydateForm\n","import React from 'react'\nimport Map from './Map/Map'\nimport PlaydateForm from './PlaydateForm/PlaydateForm'\nimport PlaydateContextProvider from './PlaydateContextProvider'\n\n// import './_PlaydateFormAndMap.scss'\n\nconst PlaydateFormAndMap = ({ currentUserId, selectedUserId, updateProfile, updateCurrentUser }) => {\n  return (\n    <PlaydateContextProvider>\n      <section className='playdate-form-map-container'>\n        <Map />\n        <PlaydateForm\n          currentUserId={currentUserId}\n          selectedUserId={selectedUserId}\n          updateProfile={updateProfile}\n          updateCurrentUser={updateCurrentUser}\n        />\n      </section>\n    </PlaydateContextProvider>\n  )\n}\n\nexport default PlaydateFormAndMap\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport PlaydateFormAndMap from './PlaydateFormAndMap/PlaydateFormAndMap'\n// import PlaydateForm from '../PlaydateForm/PlaydateForm'\n// import Map from '../Map/Map'\n\nimport fetchCalls from '../fetchCalls'\n// import './_Profile.scss'\n\nclass Profile extends Component {\n  state = {\n    selectedUser: {\n      id: '',\n      owner_name: '',\n      dog_name: '',\n      profile_pic: '',\n      dog_breed: '',\n      bio: '',\n    },\n    appointments: [],\n    existingAppointment: null,\n    status: 'loading',\n    error: ''\n  }\n\n  componentDidMount = () => {\n    fetchCalls.getSingleUser(+this.props.selectedUserId)\n      .then(user => {\n        this.setState({ selectedUser: user })\n        this.updateProfile()\n      })\n      .catch(error =>\n        this.setState({ error: error.message })\n      )\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.currentUserId && !this.state.existingAppointment) {\n      this.findExistingAppointment()\n    }\n  }\n\n  updateProfile = () => {\n    const { selectedUserId, currentUserId } = this.props\n    fetchCalls.getAppointments(+selectedUserId)\n      .then((appts) => this.setState({ appointments: appts, status: 'success' }))\n      // .then(() => {\n      //   this.findExistingAppointment()\n      // })\n  }\n\n  findExistingAppointment = () => {\n    const upcomingPlaydate = this.state.appointments.sort((appt1, appt2) =>\n      new Date(appt2.date) - new Date(appt1.date)\n    )\n      .find(appt =>\n      appt.ownersId === this.props.currentUserId\n    )\n    return upcomingPlaydate\n      ? this.setState({ existingAppointment: upcomingPlaydate })\n      : null\n  }\n\n  render() {\n    const { currentUserId, selectedUserId, updateCurrentUser, deleteAppointment } = this.props\n    const { owner_name, dog_name, profile_pic, bio } = this.state.selectedUser\n    const { appointments, existingAppointment, status, error } = this.state\n    // console.log(currentUserId)\n    return (\n      <>\n      {status === 'loading' && <h1 className='message'>Loading</h1>}\n      {status === 'error' && <h1 className='message'>{error}</h1>}\n      {(currentUserId && status === 'success') &&\n        <section className='profile-container'>\n          <article className='profile'>\n            <img className='profile__pic' src={profile_pic} />\n            <p className='profile__text'>owner's name: {owner_name}</p>\n            <p className='profile__text'>dog's name: {dog_name}</p>\n            <p className='profile__text'>bio: {bio}</p>\n            <Link to='/findfriends'>\n              <button className=\"find-friends-btn\">find more friends</button>\n            </Link>\n          </article>\n          {\n            (existingAppointment && new Date() < new Date(existingAppointment.date))\n              ? <>\n                <div className='playdate-reminder'>\n                  <h2 className='playdate-reminder__message'>You have a playdate scheduled on {existingAppointment.date} at {existingAppointment.dogPark}.</h2>\n                  <button\n                    className='playdate-reminder__cancel-btn'\n                    onClick={() => {\n                    deleteAppointment(existingAppointment.id)\n                    this.updateProfile()\n                    this.findExistingAppointment()\n                  }}>cancel</button>\n                </div>\n                </>\n              : <PlaydateFormAndMap\n                  currentUserId={currentUserId}\n                  selectedUserId={selectedUserId}\n                  updateProfile={this.updateProfile}\n                  updateCurrentUser={updateCurrentUser}\n                />\n          }\n        </section>\n      }\n      </>\n    )\n  }\n}\n\n\nexport default Profile\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\n// import './_Playdate.scss'\n\nimport dayjs from 'dayjs'\n\nconst Playdate = ({ id, dogPark, date, ownersId, ownerName, dogName, profilePic, deleteAppointment }) => {\n  date = dayjs(date).format('ddd MMM D, YYYY')\n\n  return (\n    <article className='playdate' style={{backgroundImage: `url(${profilePic})` }}>\n      <div className='playdate__text-overlay'>\n        <p>on <span>{date}</span></p>\n        <p>at <span>{dogPark}</span></p>\n        <p>with\n          <Link to={`/profile/${ownersId}`}>\n            {\" \" + ownerName} and {dogName}\n          </Link>\n        </p>\n        <button\n          className='playdate__cancel-btn'\n          onClick={() => deleteAppointment(id)}\n        >cancel</button>\n      </div>\n    </article>\n  )\n}\n\nexport default Playdate\n","import React from 'react'\n\nimport Playdate from './Playdate/Playdate'\n// import './_Dashboard.scss'\n\nconst Dashboard = ({ appointments, users, deleteAppointment }) => {\n  const playdates = appointments.sort((apptA, apptB) =>\n    new Date(apptB.date) - new Date(apptA.date)\n  ).map(appt =>\n    <Playdate key={appt.id} {...appt} deleteAppointment={deleteAppointment}/>\n  )\n\n  return (\n    <>\n      <section>\n      </section>\n      <h2 className='my-playdates'>my playdates</h2>\n      <section className='playdates-container'>\n        <button\n            id=\"slideLeft\"\n            type=\"button\"\n            onClick={() =>\n              document.querySelector('.playdates-container__playdates').scrollLeft -= 309\n            }>˂</button>\n        <div className='playdates-container__playdates'>\n          {playdates}\n        </div>\n        <button\n          id=\"slideRight\"\n          type=\"button\"\n          onClick={() =>\n            document.querySelector('.playdates-container__playdates').scrollLeft += 309\n          }\n        >˃</button>\n      </section>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n// import './_App.scss'\nimport fetchCalls from '../fetchCalls'\n\nimport Header from '../Header/Header'\nimport Gallery from '../Gallery/Gallery'\nimport Profile from '../Profile/Profile'\nimport Dashboard from '../Dashboard/Dashboard'\n\nclass App extends Component {\n  state = {\n    currentUser: {},\n    appointments: [],\n    users: [],\n    status: 'loading',\n    error: ''\n  }\n\n  componentDidMount() {\n    this.updateCurrentUser()\n  }\n\n  updateCurrentUser = async () => {\n    const user = await fetchCalls.getSingleUser(2)\n    const allUsers = await fetchCalls.getUsers()\n    const appointments = await fetchCalls.getAppointments(user.id)\n    this.setState({\n      currentUser: {...user},\n      users: allUsers,\n      appointments: appointments.sort((appt1, appt2) =>\n        new Date(appt2.date) - new Date(appt1.date)\n      ),\n      status: 'success'\n    })\n    // .catch(error =>\n    //   this.setState({ error: error.message })\n    // )\n  }\n\n  deleteAppointment = (appointmentId) => {\n    fetchCalls.deleteAppointment(appointmentId)\n      .then(() => {\n        this.updateCurrentUser()\n      })\n  }\n\n  render() {\n    const { currentUser, appointments, users } = this.state\n    const filteredUsers = users.filter(user => user.id !== currentUser.id)\n\n    return (\n      <>\n        <Header profilePic={currentUser.profile_pic}/>\n        <main>\n          <Route exact path='/' render={ () =>\n            <Dashboard\n              appointments={appointments}\n              users={filteredUsers}\n              deleteAppointment={this.deleteAppointment}\n            />\n          } />\n          <Route exact path='/findfriends' render={ () =>\n            <Gallery users={filteredUsers}/>\n          } />\n          <Route path='/profile/:userId' render={ ({ match }) =>\n            <Profile\n              currentUserId={currentUser.id}\n              selectedUserId={+match.params.userId}\n              updateCurrentUser={this.updateCurrentUser}\n              deleteAppointment={this.deleteAppointment}\n            />\n          } />\n        </main>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App/App'\nimport './styles/base.scss'\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root')\n)\n"],"sourceRoot":""}