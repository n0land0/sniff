{"version":3,"sources":["fetchCalls.js","Nav/Nav.js","Card/Card.js","Gallery/Gallery.js","parksData.js","PlaydateForm/PlaydateForm.js","Profile/Profile.js","Playdate/Playdate.js","Dashboard/Dashboard.js","App/App.js","index.js"],"names":["fetchCalls","getUsers","fetch","then","response","checkResponse","json","catch","error","console","message","getSingleUser","userId","getDetailedAppointments","postAppointment","newPlaydates","method","headers","body","JSON","stringify","ok","status","Error","Nav","exact","to","activeClassName","Card","id","owner_name","dog_name","profile_pic","dog_breed","className","src","Gallery","userCards","users","map","user","parksData","PlaydateForm","state","date","location","parks","componentDidMount","setState","handleChange","event","target","name","value","handleSubmit","preventDefault","props","currentUserId","selectedUserId","updateProfile","updateCurrentUser","usersInvolved","playdateId","Date","now","playdates","playmate","find","clearInputs","this","parkOptions","park","onSubmit","type","required","onChange","disabled","selected","hidden","Component","Profile","bio","appointments","playdateReminder","appt","Playdate","ownerName","dogName","Dashboard","sort","apptA","apptB","App","currentUser","Promise","all","allUsers","filteredUsers","filter","path","render","match","params","ReactDOM","document","getElementById"],"mappings":"yXA+DeA,G,MA/DI,CACjBC,SADiB,WACL,IAAD,OAET,OAAOC,MAAM,gDACVC,MAAK,SAAAC,GAEJ,OADA,EAAKC,cAAcD,GACZA,EAASE,UAGjBC,OAAM,SAAAC,GAEL,OADAC,QAAQD,MAAMA,GACPA,EAAME,YAInBC,cAfiB,SAeHC,GAAS,IAAD,OAEpB,OAAOV,MAAM,gDAAD,OAAiDU,IAC1DT,MAAK,SAAAC,GAEJ,OADA,EAAKC,cAAcD,GACZA,EAASE,WAItBO,wBAxBiB,SAwBOD,GAAS,IAAD,OAE9B,OAAOV,MAAM,mDAAD,OAAoDU,IAC7DT,MAAK,SAAAC,GAEJ,OADA,EAAKC,cAAcD,GACZA,EAASE,WAItBQ,gBAjCiB,SAiCDC,GAAe,IAAD,OAE5B,OAAOb,MAAM,mDAAoD,CAC/Dc,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KAEtBZ,MAAK,SAAAC,GAEJ,OADA,EAAKC,cAAcD,GACZA,EAASE,WAIpBD,cAhDiB,SAgDHD,GACZ,IAAKA,EAASiB,GACZ,MAAwB,MAApBjB,EAASkB,QAAsC,MAApBlB,EAASkB,QAET,MAApBlB,EAASkB,QAETlB,EAASkB,OAHZ,IAAIC,S,eCjCHC,EAdH,WAEV,OACE,gCACE,cAAC,IAAD,CAASC,OAAK,EAACC,GAAG,IAAIC,gBAAgB,SAAtC,kBAGA,cAAC,IAAD,CAASF,OAAK,EAACC,GAAG,eAAeC,gBAAgB,SAAjD,8BCOSC,G,MAbF,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,UAErD,OACE,cAAC,IAAD,CAAMP,GAAE,mBAAcG,GAAtB,SACE,0BAASK,UAAU,eAAnB,UACE,qBAAKC,IAAKH,IACV,+BAAKD,EAAL,MAAkBD,KAClB,4BAAIG,WCGGG,G,MAVC,SAAC,GAAe,IACxBC,EADuB,EAAZC,MACOC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,eAAwBA,GAAbA,EAAKX,OAEpD,OACE,yBAASK,UAAU,UAAnB,SACGG,M,QCFQI,EARG,CAChB,oBACA,kBACA,mBACA,wBACA,qBCCIC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,SAAU,GACVC,MAAO,I,EAGTC,kBAAoB,WAClB,EAAKC,SAAS,CAAEF,MAAOL,K,EAGzBQ,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,EAAKL,SAAL,eAAiBI,EAAOC,K,EAG1BC,aAAe,SAACJ,GACdA,EAAMK,iBACN,MAA2B,EAAKZ,MAAxBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACd,EAA4E,EAAKW,MAAzEC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,eAAgBC,EAAvC,EAAuCA,cAAeC,EAAtD,EAAsDA,kBAChDC,EAAgB,CAAEJ,EAAeC,GACjCI,EAAaC,KAAKC,MAClBC,EAAYJ,EAActB,KAAI,SAAAV,GAClC,MAAO,CACLA,GAAIiC,EACJlD,OAAQiB,EACRqC,SAAUL,EAAcM,MAAK,SAAAvD,GAAM,OAAIA,IAAWiB,KAClDe,OAAMC,eAIV7C,EAAWc,gBAAgBmD,GAC1B9D,MAAK,WACJyD,IACAD,OAEF,EAAKS,e,EAGPA,YAAc,WACZ,EAAKpB,SAAS,CAAEJ,KAAM,GAAIC,SAAU,M,4CAGtC,WACE,MAAkCwB,KAAK1B,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SACRyB,EADN,EAAwBxB,MACEP,KAAI,SAAAgC,GAAI,OAAI,wBAAQlB,MAAOkB,EAAf,SAAuBA,OAE7D,OACE,uBAAMC,SAAUH,KAAKf,aAArB,UACE,uBACEmB,KAAK,OACLrB,KAAK,OACLC,MAAOT,EACP8B,UAAQ,EACRC,SAAUN,KAAKpB,eAEjB,yBACEG,KAAK,WACLC,MAAOR,EACP8B,SAAUN,KAAKpB,aACfyB,UAAQ,EAJV,UAME,wBAAQrB,MAAM,GAAGuB,UAAQ,EAACC,UAAQ,EAACC,QAAM,EAAzC,2BACCR,KAEH,yD,GAjEmBS,aAuEZrC,IClETsC,G,kNACJrC,MAAQ,CACNd,GAAI,EACJC,WAAY,GACZC,SAAU,GACVC,YAAa,GACbiD,IAAK,GACLC,aAAc,I,EAGhBnC,kBAAoB,WAClB,EAAKY,iB,EAGPA,cAAgB,WACd3D,EAAWW,eAAe,EAAK6C,MAAME,gBAClCvD,MAAK,SAACC,GAAD,OAAc,EAAK4C,SAAL,eAAkB5C,Q,4CAG1C,WACE,MAA6DiE,KAAKb,MAA1DC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,eAAgBE,EAAvC,EAAuCA,kBACvC,EAAiES,KAAK1B,MAA9Db,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAAUC,EAA9B,EAA8BA,YAAaiD,EAA3C,EAA2CA,IACrCE,EADN,EAAgDD,aACVf,MAAK,SAAAiB,GACzC,OAAOA,EAAKlB,SAASrC,KAAO4B,KAG9B,OACE,0BAASvB,UAAU,UAAnB,UACE,qBAAKC,IAAKH,IACV,+CAAkBF,KAClB,6CAAgBC,KAChB,sCAASkD,KACRE,EACC,kEAAqCA,EAAiBvC,KAAtD,OAAgEuC,EAAiBtC,SAAjF,OACA,cAAC,EAAD,CACEY,cAAeA,EACfC,eAAgBA,EAChBC,cAAeU,KAAKV,cACpBC,kBAAmBA,IAGvB,cAAC,IAAD,CAAMlC,GAAG,eAAT,SACE,wBAAQQ,UAAU,mBAAlB,wC,GA1CY6C,cAkDPC,ICzCAK,G,MAfE,SAAC,GAAqC,EAAnCxD,GAAoC,IAAhCe,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAUqB,EAAe,EAAfA,SAC9BoB,EAAuBpB,EAAvBoB,UAAWC,EAAYrB,EAAZqB,QAInB,OACE,0BAASrD,UAAU,WAAnB,UACE,uCAAUU,KACV,2CAAcC,KACd,sCAASyC,EAAT,QAAyBC,KACzB,iDCiBSC,G,MA1BG,SAAC,GAA6B,IAA3BN,EAA0B,EAA1BA,aACbjB,GADuC,EAAZ3B,MACf4C,EAAaO,MAAK,SAACC,EAAOC,GAAR,OAClC,IAAI5B,KAAK4B,EAAM/C,MAAQ,IAAImB,KAAK2B,EAAM9C,SACtCL,KAAI,SAAA6C,GAAI,OAMR,aALF,CAKG,EAAD,eAA4BA,GAAbA,EAAKvD,QAKtB,OACE,qCACE,4BAEA,0BAASK,UAAU,sBAAnB,UACE,2CACC+B,UCdH2B,E,4MACJjD,MAAQ,CACNkD,YAAa,CACXX,aAAc,IAEhB5C,MAAO,I,EAOTsB,kBAAoB,WAClBkC,QAAQC,IAAI,CAAC/F,EAAWW,cAAc,GAAIX,EAAWC,aAClDE,MAAK,YAAuB,IAAD,mBAApBqC,EAAoB,KAAdwD,EAAc,KAC1B,EAAKhD,SAAS,CAAE6C,YAAY,eAAKrD,GAAOF,MAAO0D,Q,uDAPrD,WACE3B,KAAKT,sB,oBAYP,WAAU,IAAD,OACP,EAA+BS,KAAK1B,MAA5BkD,EAAR,EAAQA,YACFI,EADN,EAAqB3D,MACO4D,QAAO,SAAA1D,GAAI,OAAIA,EAAKX,KAAOgE,EAAYhE,MAEnE,OACE,qCACA,cAAC,EAAD,IACA,iCACE,cAAC,IAAD,CAAOJ,OAAK,EAAC0E,KAAK,IAAIC,OAAS,kBAC7B,cAAC,EAAD,CAAWlB,aAAcW,EAAYX,aAAc5C,MAAO2D,OAE5D,cAAC,IAAD,CAAOxE,OAAK,EAAC0E,KAAK,eAAeC,OAAS,kBACxC,cAAC,EAAD,CAAS9D,MAAO2D,OAElB,cAAC,IAAD,CAAOE,KAAK,mBAAmBC,OAAS,gBAAGC,EAAH,EAAGA,MAAH,OACtC,cAAC,EAAD,CACE5C,cAAeoC,EAAYhE,GAC3B6B,gBAAiB2C,EAAMC,OAAO1F,OAC9BgD,kBAAmB,EAAKA,iC,GAvClBmB,aAgDHa,I,YCpDfW,IAASH,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MACSI,SAASC,eAAe,W","file":"static/js/main.80bee1ab.chunk.js","sourcesContent":["const fetchCalls = {\n  getUsers() {\n    // return fetch('http://localhost:3001/api/v1/users')\n    return fetch('https://sniff-api.herokuapp.com/api/v1/users')\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n      // .then(data => data.users)\n      .catch(error => {\n        console.error(error)\n        return error.message\n      })\n  },\n\n  getSingleUser(userId) {\n    // return fetch(`http://localhost:3001/api/v1/users/${userId}`)\n    return fetch(`https://sniff-api.herokuapp.com/api/v1/users/${userId}`)\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n  },\n\n  getDetailedAppointments(userId) {\n    // return fetch(`http://localhost:3001/api/v1/playdates${userId}`)\n    return fetch(`https://sniff-api.herokuapp.com/api/v1/playdates${userId}`)\n      .then(response => {\n        this.checkResponse(response)\n        return response.json()\n      })\n  },\n\n  postAppointment(newPlaydates) {\n    // return fetch('http://localhost:3001/api/v1/playdates', {\n    return fetch('https://sniff-api.herokuapp.com/api/v1/playdates', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newPlaydates)\n    })\n    .then(response => {\n      this.checkResponse(response)\n      return response.json()\n    })\n  },\n\n  checkResponse(response) {\n    if (!response.ok) {\n      if (response.status === 422 || response.status === 403) {\n        throw new Error()\n      } else if (response.status === 404) {\n        throw new Error()\n      } else if (response.status >= 500) {\n        throw new Error()\n      } else {\n        throw new Error()\n      }\n    }\n  }\n}\n\nexport default fetchCalls\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, NavLink, Redirect } from 'react-router-dom'\nimport './Nav.css'\n\nconst Nav = () => {\n\n  return (\n    <nav>\n      <NavLink exact to='/' activeClassName='active'>\n        Home\n      </NavLink>\n      <NavLink exact to='/findfriends' activeClassName='active'>\n        Find Friends\n      </NavLink>\n    </nav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\n\nimport './Card.css'\n\nconst Card = ({ id, owner_name, dog_name, profile_pic, dog_breed }) => {\n\n  return (\n    <Link to={`/profile/${id}`}>\n      <article className='profile-card'>\n        <img src={profile_pic} />\n        <h3>{dog_name} & {owner_name}</h3>\n        <p>{dog_breed}</p>\n      </article>\n    </Link>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\nimport Card from '../Card/Card'\nimport './Gallery.css'\n\nconst Gallery = ({ users }) => {\n  const userCards = users.map(user => <Card key={user.id} {...user} />)\n\n  return (\n    <section className='gallery'>\n      {userCards}\n    </section>\n  )\n}\n\nexport default Gallery\n","const parksData = [\n  'Berkeley Dog Park',\n  'Fuller Dog Park',\n  'Midtown Dog Park',\n  'Cherry Creek Dog Park',\n  'Greenway Dog Park'\n]\n\nexport default parksData\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\n\nimport parksData from '../parksData'\nimport fetchCalls from '../fetchCalls'\n\nclass PlaydateForm extends Component {\n  state = {\n    date: '',\n    location: '',\n    parks: []\n  }\n\n  componentDidMount = () => {\n    this.setState({ parks: parksData })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    const { date, location } = this.state\n    const { currentUserId, selectedUserId, updateProfile, updateCurrentUser } = this.props\n    const usersInvolved = [ currentUserId, selectedUserId ]\n    const playdateId = Date.now()\n    const playdates = usersInvolved.map(id => {\n      return {\n        id: playdateId,\n        userId: id,\n        playmate: usersInvolved.find(userId => userId !== id),\n        date, location,\n      }\n    })\n\n    fetchCalls.postAppointment(playdates)\n    .then(() => {\n      updateCurrentUser()\n      updateProfile()\n    })\n    this.clearInputs()\n  }\n\n  clearInputs = () => {\n    this.setState({ date: '', location: '' })\n  }\n\n  render() {\n    const { date, location, parks } = this.state\n    const parkOptions = parks.map(park => <option value={park} >{park}</option>)\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type='date'\n          name='date'\n          value={date}\n          required\n          onChange={this.handleChange}\n        />\n        <select\n          name='location'\n          value={location}\n          onChange={this.handleChange}\n          required\n        >\n          <option value='' disabled selected hidden>Choose a park</option>\n          {parkOptions}\n        </select>\n        <button>Set Playdate</button>\n      </form>\n    )\n  }\n}\n\nexport default PlaydateForm\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\n\nimport PlaydateForm from '../PlaydateForm/PlaydateForm'\n\nimport userData from '../userData'\nimport fetchCalls from '../fetchCalls'\nimport './Profile.css'\n\n// it's starting to feel like building this as a modal will make site navigation a lot cleaner - confine page changes to navbar\n\nclass Profile extends Component {\n  state = {\n    id: 0,\n    owner_name: '',\n    dog_name: '',\n    profile_pic: '',\n    bio: '',\n    appointments: []\n  }\n\n  componentDidMount = () => {\n    this.updateProfile()\n  }\n\n  updateProfile = () => {\n    fetchCalls.getSingleUser(+this.props.selectedUserId)\n      .then((response) => this.setState({...response}))\n  }\n\n  render() {\n    const { currentUserId, selectedUserId, updateCurrentUser } = this.props\n    const { owner_name, dog_name, profile_pic, bio, appointments } = this.state\n    const playdateReminder = appointments.find(appt => {\n      return appt.playmate.id === currentUserId\n    })\n\n    return (\n      <section className='profile'>\n        <img src={profile_pic} />\n        <p>Owner's Name: {owner_name}</p>\n        <p>Dog's Name: {dog_name}</p>\n        <p>Bio: {bio}</p>\n        {playdateReminder ?\n          <p>You have a playdate scheduled on {playdateReminder.date} at {playdateReminder.location}.</p> :\n          <PlaydateForm\n            currentUserId={currentUserId}\n            selectedUserId={selectedUserId}\n            updateProfile={this.updateProfile}\n            updateCurrentUser={updateCurrentUser}\n          />\n        }\n        <Link to='/findfriends'>\n          <button className=\"find-friends-btn\">Find more friends</button>\n        </Link>\n      </section>\n    )\n  }\n}\n\n\nexport default Profile\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\n\nimport './Playdate.css'\n\nconst Playdate = ({ id, date, location, playmate }) => {\n  const { ownerName, dogName } = playmate\n\n  // cancel button - post both users' appts, trigger app CDU\n\n  return (\n    <article className='playdate'>\n      <p>Date: {date}</p>\n      <p>Location: {location}</p>\n      <p>With {ownerName} and {dogName}</p>\n      <button>Cancel</button>\n    </article>\n  )\n}\n\nexport default Playdate\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\n\nimport Playdate from '../Playdate/Playdate'\nimport './Dashboard.css'\n\nconst Dashboard = ({ appointments, users }) => {\n  const playdates = appointments.sort((apptA, apptB) =>\n    new Date(apptB.date) - new Date(apptA.date)\n  ).map(appt =>\n  //   appt.userToMeet = appt.usersInvolved.filter(userId =>\n  //     users.some(user => user.id === userId)\n  //   ).map(userId =>\n  //     users.find(user => user.id === userId)\n  //   )[0]\n    <Playdate key={appt.id} {...appt}/>\n  )\n\n  // fetch user when App mounts, pass in appts, iterate and return Playdate components\n\n  return (\n    <>\n      <section>\n      </section>\n      <section className='playdates-container'>\n        <h2>Playdates</h2>\n        {playdates}\n      </section>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React, { Component } from 'react'\nimport { Route, Switch, Link, Redirect } from 'react-router-dom'\nimport './App.css'\nimport fetchCalls from '../fetchCalls'\n\nimport Nav from '../Nav/Nav'\nimport Gallery from '../Gallery/Gallery'\nimport Profile from '../Profile/Profile'\nimport Dashboard from '../Dashboard/Dashboard'\n\nimport userData from '../userData'\n\nclass App extends Component {\n  state = {\n    currentUser: {\n      appointments: []\n    },\n    users: []\n  }\n\n  componentDidMount() {\n    this.updateCurrentUser()\n  }\n\n  updateCurrentUser = () => {\n    Promise.all([fetchCalls.getSingleUser(2), fetchCalls.getUsers()])\n      .then(([user, allUsers]) => {\n        this.setState({ currentUser: {...user}, users: allUsers })\n    })\n  }\n\n// should PlaydateForm be a sibling of Profile?\n  // ...if currentUser playdates need to be added to App state\n  render() {\n    const { currentUser, users } = this.state\n    const filteredUsers = users.filter(user => user.id !== currentUser.id)\n\n    return (\n      <>\n      <Nav />\n      <main>\n        <Route exact path='/' render={ () =>\n          <Dashboard appointments={currentUser.appointments} users={filteredUsers}/>\n        } />\n        <Route exact path='/findfriends' render={ () =>\n          <Gallery users={filteredUsers}/>\n        } />\n        <Route path='/profile/:userId' render={ ({ match }) =>\n          <Profile\n            currentUserId={currentUser.id}\n            selectedUserId={+match.params.userId}\n            updateCurrentUser={this.updateCurrentUser}\n          />\n        } />\n      </main>\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App/App'\nimport './_reset.css'\nimport './index.css'\n\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>, document.getElementById('root'))\n"],"sourceRoot":""}